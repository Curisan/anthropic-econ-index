name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/**'

env:
  IMAGE_NAME: anthropic-econ-index
  REGISTRY: crpi-f384ynye77ss24l5.cn-hangzhou.personal.cr.aliyuncs.com
  NAMESPACE: yezhijian
  LOCAL_TAG: anthropic-econ-index:test

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"
      
    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
        
    - name: Build Docker image locally
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        load: true
        tags: ${{ env.LOCAL_TAG }}
    
    - name: Test Docker image
      run: |
        # 创建测试数据目录
        mkdir -p /tmp/anthropic-econ-index/db
        
        # 运行容器并检查启动状态
        echo "启动测试容器..."
        docker run -d \
          --name anthropic-econ-index-test \
          -p 5011:5010 \
          -v /tmp/anthropic-econ-index/db:/data/db \
          -e DB_TYPE=sqlite \
          -e ENV=test \
          -e DEBUG=True \
          ${{ env.LOCAL_TAG }}
        
        # 等待容器启动
        sleep 10
        
        # 检查容器状态
        if [ "$(docker inspect -f {{.State.Running}} anthropic-econ-index-test)" = "true" ]; then
          echo "容器成功启动!"
          
          # 检查健康检查接口
          HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5011/api/health || echo "Failed")
          if [ "$HEALTH_STATUS" = "200" ]; then
            echo "健康检查通过: HTTP 200 OK"
          else
            echo "健康检查失败: $HEALTH_STATUS"
            docker logs anthropic-econ-index-test
            docker stop anthropic-econ-index-test
            docker rm anthropic-econ-index-test
            exit 1
          fi
        else
          echo "容器启动失败!"
          docker logs anthropic-econ-index-test
          docker stop anthropic-econ-index-test || true
          docker rm anthropic-econ-index-test || true
          exit 1
        fi
        
        # 清理测试容器
        docker stop anthropic-econ-index-test
        docker rm anthropic-econ-index-test
        
        echo "测试成功，准备推送镜像..."

    - name: Tag and Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.date.outputs.date }}

    - name: Deploy to Server
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          # 登录到阿里云容器镜像服务
          docker login ${{ env.REGISTRY }} -u ${{ secrets.ALIYUN_DOCKER_USERNAME }} -p ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
          
          # 拉取最新镜像
          docker pull ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          
          # 停止并删除旧容器（如果存在）
          docker stop anthropic-econ-index || true
          docker rm anthropic-econ-index || true
          
          # 确保数据目录存在
          mkdir -p /data/anthropic-econ-index/db
          
          # 启动新容器
          docker run -d \
            --name anthropic-econ-index \
            -p 5010:5010 \
            -v /data/anthropic-econ-index/db:/data/db \
            --restart always \
            -e DB_TYPE=${{ secrets.DB_TYPE || 'sqlite' }} \
            -e DB_HOST=${{ secrets.DB_HOST || 'localhost' }} \
            -e DB_PORT=${{ secrets.DB_PORT || '3306' }} \
            -e DB_USER=${{ secrets.DB_USER || 'root' }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD || '' }} \
            -e DB_NAME=${{ secrets.DB_NAME || 'anthropic_econ_index' }} \
            -e ENV=${{ secrets.ENV || 'production' }} \
            -e DEBUG=False \
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          
          # 删除未使用的镜像
          docker image prune -f 